{"ast":null,"code":"import _regeneratorRuntime from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"D:/education-website/server/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __async = function __async(__this, __arguments, generator) {\n  return new Promise(function (resolve, reject) {\n    var fulfilled = function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = function rejected(value) {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = function step(x) {\n      return x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    };\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/YouTube.tsx\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport isEqual from \"fast-deep-equal\";\nimport youTubePlayer from \"youtube-player\";\nfunction shouldUpdateVideo(prevProps, props) {\n  var _a, _b;\n  if (prevProps.videoId !== props.videoId) {\n    return true;\n  }\n  var prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n  var vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n  return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return __spreadProps(__spreadValues({}, opts), {\n    height: 0,\n    width: 0,\n    playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n      autoplay: 0,\n      start: 0,\n      end: 0\n    })\n  });\n}\nfunction shouldResetPlayer(prevProps, props) {\n  return prevProps.videoId !== props.videoId || !isEqual(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n  var _a, _b, _c, _d;\n  return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n  videoId: \"\",\n  id: \"\",\n  className: \"\",\n  iframeClassName: \"\",\n  style: {},\n  title: \"\",\n  loading: void 0,\n  opts: {},\n  onReady: function onReady() {},\n  onError: function onError() {},\n  onPlay: function onPlay() {},\n  onPause: function onPause() {},\n  onEnd: function onEnd() {},\n  onStateChange: function onStateChange() {},\n  onPlaybackRateChange: function onPlaybackRateChange() {},\n  onPlaybackQualityChange: function onPlaybackQualityChange() {}\n};\nvar propTypes = {\n  videoId: PropTypes.string,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  iframeClassName: PropTypes.string,\n  style: PropTypes.object,\n  title: PropTypes.string,\n  loading: PropTypes.oneOf([\"lazy\", \"eager\"]),\n  opts: PropTypes.objectOf(PropTypes.any),\n  onReady: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onPlaybackQualityChange: PropTypes.func\n};\nvar _YouTube = /*#__PURE__*/function (_React$Component) {\n  _inherits(_YouTube, _React$Component);\n  var _super = _createSuper(_YouTube);\n  function _YouTube(props) {\n    var _this;\n    _classCallCheck(this, _YouTube);\n    _this = _super.call(this, props);\n    _this.destroyPlayerPromise = void 0;\n    _this.onPlayerReady = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onReady) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerError = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onError) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerStateChange = function (event) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      (_b = (_a = _this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n      switch (event.data) {\n        case _YouTube.PlayerState.ENDED:\n          (_d = (_c = _this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n          break;\n        case _YouTube.PlayerState.PLAYING:\n          (_f = (_e = _this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n          break;\n        case _YouTube.PlayerState.PAUSED:\n          (_h = (_g = _this.props).onPause) == null ? void 0 : _h.call(_g, event);\n          break;\n        default:\n      }\n    };\n    _this.onPlayerPlaybackRateChange = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.onPlayerPlaybackQualityChange = function (event) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n    };\n    _this.destroyPlayer = function () {\n      if (_this.internalPlayer) {\n        _this.destroyPlayerPromise = _this.internalPlayer.destroy().then(function () {\n          return _this.destroyPlayerPromise = void 0;\n        });\n        return _this.destroyPlayerPromise;\n      }\n      return Promise.resolve();\n    };\n    _this.createPlayer = function () {\n      if (typeof document === \"undefined\") return;\n      if (_this.destroyPlayerPromise) {\n        _this.destroyPlayerPromise.then(_this.createPlayer);\n        return;\n      }\n      var playerOpts = __spreadProps(__spreadValues({}, _this.props.opts), {\n        videoId: _this.props.videoId\n      });\n      _this.internalPlayer = youTubePlayer(_this.container, playerOpts);\n      _this.internalPlayer.on(\"ready\", _this.onPlayerReady);\n      _this.internalPlayer.on(\"error\", _this.onPlayerError);\n      _this.internalPlayer.on(\"stateChange\", _this.onPlayerStateChange);\n      _this.internalPlayer.on(\"playbackRateChange\", _this.onPlayerPlaybackRateChange);\n      _this.internalPlayer.on(\"playbackQualityChange\", _this.onPlayerPlaybackQualityChange);\n      if (_this.props.title || _this.props.loading) {\n        _this.internalPlayer.getIframe().then(function (iframe) {\n          if (_this.props.title) iframe.setAttribute(\"title\", _this.props.title);\n          if (_this.props.loading) iframe.setAttribute(\"loading\", _this.props.loading);\n        });\n      }\n    };\n    _this.resetPlayer = function () {\n      return _this.destroyPlayer().then(_this.createPlayer);\n    };\n    _this.updatePlayer = function () {\n      var _a;\n      (_a = _this.internalPlayer) == null ? void 0 : _a.getIframe().then(function (iframe) {\n        if (_this.props.id) iframe.setAttribute(\"id\", _this.props.id);else iframe.removeAttribute(\"id\");\n        if (_this.props.iframeClassName) iframe.setAttribute(\"class\", _this.props.iframeClassName);else iframe.removeAttribute(\"class\");\n        if (_this.props.opts && _this.props.opts.width) iframe.setAttribute(\"width\", _this.props.opts.width.toString());else iframe.removeAttribute(\"width\");\n        if (_this.props.opts && _this.props.opts.height) iframe.setAttribute(\"height\", _this.props.opts.height.toString());else iframe.removeAttribute(\"height\");\n        if (_this.props.title) iframe.setAttribute(\"title\", _this.props.title);else iframe.setAttribute(\"title\", \"YouTube video player\");\n        if (_this.props.loading) iframe.setAttribute(\"loading\", _this.props.loading);else iframe.removeAttribute(\"loading\");\n      });\n    };\n    _this.getInternalPlayer = function () {\n      return _this.internalPlayer;\n    };\n    _this.updateVideo = function () {\n      var _a, _b, _c, _d;\n      if (typeof _this.props.videoId === \"undefined\" || _this.props.videoId === null) {\n        (_a = _this.internalPlayer) == null ? void 0 : _a.stopVideo();\n        return;\n      }\n      var autoplay = false;\n      var opts = {\n        videoId: _this.props.videoId\n      };\n      if ((_b = _this.props.opts) == null ? void 0 : _b.playerVars) {\n        autoplay = _this.props.opts.playerVars.autoplay === 1;\n        if (\"start\" in _this.props.opts.playerVars) {\n          opts.startSeconds = _this.props.opts.playerVars.start;\n        }\n        if (\"end\" in _this.props.opts.playerVars) {\n          opts.endSeconds = _this.props.opts.playerVars.end;\n        }\n      }\n      if (autoplay) {\n        (_c = _this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n        return;\n      }\n      (_d = _this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n    };\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n    _this.container = null;\n    _this.internalPlayer = null;\n    return _this;\n  }\n  _createClass(_YouTube, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createPlayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      return __async(this, null, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (shouldUpdatePlayer(prevProps, this.props)) {\n                this.updatePlayer();\n              }\n              if (!shouldResetPlayer(prevProps, this.props)) {\n                _context.next = 4;\n                break;\n              }\n              _context.next = 4;\n              return this.resetPlayer();\n            case 4:\n              if (shouldUpdateVideo(prevProps, this.props)) {\n                this.updateVideo();\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyPlayer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */React.createElement(\"div\", {\n        className: this.props.className,\n        style: this.props.style\n      }, /* @__PURE__ */React.createElement(\"div\", {\n        id: this.props.id,\n        className: this.props.iframeClassName,\n        ref: this.refContainer\n      }));\n    }\n  }]);\n  return _YouTube;\n}(React.Component);\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n  UNSTARTED: -1,\n  ENDED: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  BUFFERING: 3,\n  CUED: 5\n};\nvar YouTube_default = YouTube;\nexport { YouTube_default as default };\n//# sourceMappingURL=YouTube.esm.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}